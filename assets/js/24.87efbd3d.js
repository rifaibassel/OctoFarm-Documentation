(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{399:function(a,t,s){"use strict";s.r(t);var e=s(27),o=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"upgrading-mongodb-from-previous-versions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upgrading-mongodb-from-previous-versions"}},[a._v("#")]),a._v(" Upgrading MongoDB From Previous Versions")]),a._v(" "),s("h2",{attrs:{id:"guide-is-specifically-for-monolithic-but-should-work-for-any-mongodb-data-just-be-aware-of-the-versions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guide-is-specifically-for-monolithic-but-should-work-for-any-mongodb-data-just-be-aware-of-the-versions"}},[a._v("#")]),a._v(" Guide is specifically for Monolithic but should work for any mongodb data. Just be aware of the versions.")]),a._v(" "),s("p",[a._v('If your still on the older version, you can skip part 1. Just exec into the octofarm container and run the commands from there... the "some_mongo" name will be different though.')]),a._v(" "),s("ol",[s("li",[a._v("Start mongodb 3.2 container")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker run -v /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("replace with your data directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/:/data/db --name some_mongo -d mongo:3.2\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("Go into the containers CLI")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it some_mongo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v('Make a new "dump" directory')])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" /data/db/dump\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("Use mongodump to backup the database")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("mongodump -d octofarm -o /data/db/dump\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("Exit the docker container cli")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[a._v("Clean up the old container and move the dump somewhere safe")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" docker stop some_mongo\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" some_mongo\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("replace with your data directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/dump/octofarm ~/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("your safe dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[a._v("Nuke you data dir folder")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -Rf /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("replace with your data directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[a._v("Spin up a mongodb 4.4.14 container (this is what the new monolithic image uses), then stop it")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker run -v /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("replace with your data directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/:/data/db --name some_mongo -d mongo:4.4.14\ndocker stop some_mongo\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[a._v("Change into your newly created local directory, create a folder called dump and add back in the octofarm dump.")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("replace with your data directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" dump\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" -r ~/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("your safe dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("replace with your data directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/dump\ndocker start some_mongo\n")])])]),s("ol",{attrs:{start:"9"}},[s("li",[a._v("Back into the containers CLI")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it some_mongo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),s("ol",{attrs:{start:"10"}},[s("li",[a._v("Restore your database dump")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("mongorestore /data/db/dump/octofarm/ --db octofarm\n")])])]),s("p",[a._v("You should see something like: "),s("code",[a._v("2022-05-22T02:03:41.594+0000 # document(s) restored successfully. 0 document(s) failed to restore.")])]),a._v(" "),s("ol",{attrs:{start:"11"}},[s("li",[a._v("Exit the container and remove the 4.4 image.")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\ndocker stop some_mongo\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" some_mongo\n")])])]),s("p",[a._v("That's it! Your database will be updated to mongo v4.4. You just need to update your container and restart if you haven't already updated.")])])}),[],!1,null,null,null);t.default=o.exports}}]);